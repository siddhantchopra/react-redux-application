{"version":3,"sources":["components/DishdetailComponent.js","components/ContactComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js","shared/baseUrl.js","components/LoadingComponent.js"],"names":["required","val","length","maxLength","len","RenderDish","dish","comments","postComment","dishId","undefined","className","in","transformProps","exitTransform","width","src","baseUrl","image","alt","name","description","RenderComments","map","comment","style","marginBottom","key","id","marginTop","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","props","toggleModal","setState","prevState","isModalOpen","handleSubmit","values","rating","state","outline","onClick","this","isOpen","toggle","onSubmit","htmlFor","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","type","color","Component","DishDetail","isLoading","errMess","to","active","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","alert","JSON","stringify","resetFeedbackForm","href","role","md","size","offset","check","checkbox","Header","toggleNav","isNavOpen","handleLogin","e","username","value","password","remember","checked","preventDefault","dark","expand","height","navbar","innerRef","input","Footer","RenderCard","item","designation","Home","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","dishesFailed","errmess","payload","addDishes","dishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addleaders","leaders","Menu","lazy","About","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","fallback","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","exact","match","parseInt","params","commentsErrMess","ErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","body","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedBack","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","Loading"],"mappings":"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","file":"static/js/main.76204fb8.chunk.js","sourcesContent":["\r\nimport React, { Fragment, Component } from 'react'\r\nimport { Modal, ModalBody, ModalHeader, Button, Label, Row, Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap'\r\n// import moment from 'moment'\r\nimport { Link } from 'react-router-dom'\r\nimport { Control, LocalForm, Errors } from 'react-redux-form'\r\nimport { Loading } from './LoadingComponent'\r\nimport { baseUrl } from '../shared/baseUrl'\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components'\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => val => !(val) || (val.length <= len)\r\nconst minLength = (len) => val => (val) && (val.length >= len)\r\n\r\nconst RenderDish = ({ dish, comments, postComment, dishId }) => {\r\n    if (dish !== undefined && dish !== null) {\r\n        return (<Fragment>\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <FadeTransform in\r\n                    transformProps={{\r\n                        exitTransform: 'scale(0.5) translateY(-50%)'\r\n                    }}>\r\n                    <Card>\r\n                        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            </div>\r\n            {<RenderComments comments={comments}\r\n                postComment={postComment}\r\n                dishId={dishId}\r\n            />}\r\n        </Fragment>\r\n        )\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\nconst RenderComments = ({ comments, postComment, dishId }) => {\r\n    if (comments !== null) {\r\n        return (<div className=\"col-12 col-md-5 m-1\">\r\n            <Card>\r\n                <CardBody>\r\n                    <h4>Comments</h4>\r\n                    <ul className=\"list-unstyled\">\r\n                        <Stagger in>\r\n                        {\r\n                            comments.map((comment) => {\r\n                                return <Fade in><li style={{ marginBottom: '10px' }} key={comment.id}>{comment.comment}\r\n                                    <div style={{ marginTop: '10px' }}>--{comment.author},\r\n                                {/* {moment(comment.date).format('MMM DD, YYYY')} */}\r\n                                        {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}\r\n                                    </div>\r\n                                </li>\r\n                                </Fade>\r\n                            })\r\n                        }\r\n                        </Stagger>\r\n                    </ul>\r\n                    <CommentForm dishId={dishId} postComment={postComment} />\r\n                </CardBody>\r\n            </Card>\r\n        </div >\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n\r\n}\r\nconst DishDetail = (props) => {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else if (props.dish !== null) {\r\n        return (\r\n            <Fragment>\r\n                {props.dish &&\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <Breadcrumb>\r\n                                <BreadcrumbItem>\r\n                                    <Link to=\"/menu\">Menu</Link>\r\n                                </BreadcrumbItem>\r\n                                <BreadcrumbItem active>\r\n                                    {props.dish.name}\r\n                                </BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                            <div className=\"col-12\">\r\n                                <h3>{props.dish.name}</h3>\r\n                                <hr />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <RenderDish dish={props.dish} comments={props.comments}\r\n                                postComment={props.postComment}\r\n                                dishId={props.dish.id}\r\n                            />\r\n                        </div>\r\n                    </div>}\r\n            </Fragment>\r\n        )\r\n    } else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isModalOpen: false\r\n        }\r\n    }\r\n    toggleModal = () => {\r\n        this.setState((prevState) => ({\r\n            isModalOpen: !prevState.isModalOpen\r\n        }))\r\n    }\r\n\r\n    handleSubmit = (values) => {\r\n        this.toggleModal()\r\n        // alert(\"Comment State is: \" + JSON.stringify(values))\r\n        this.props.postComment(this.props.dishId, values.rating, values.name, values.comment)\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg\"></span>\r\n                                     Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"container\">\r\n\r\n                            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"rating\"> Rating</Label>\r\n\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n\r\n                                    </Control.select>\r\n\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"tname\">Your Name</Label>\r\n\r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{ required, minLength: minLength(3), maxLength: maxLength(15) }}\r\n                                    />\r\n                                    <Errors className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"comment\">Comment</Label>\r\n\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n\r\n                                </Row>\r\n                            </LocalForm>\r\n                        </div>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DishDetail","import React, { Component } from 'react';\r\nimport { BreadcrumbItem, Breadcrumb, Button, Label, Col, Row } from 'reactstrap'\r\nimport {Control, Form, Errors, actions} from 'react-redux-form'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst required =(val)=> val && val.length;\r\nconst maxLength = (len) => val => !(val) || (val.length <= len)\r\nconst minLength = (len) => val => (val) && (val.length >= len)\r\nconst isNumber = (val) => !isNaN(Number(val))\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val)\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n    }\r\n  \r\n    handleSubmit = (values) => {\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message)\r\n        // console.log(\"Current State is: \" + JSON.stringify(values))\r\n        alert(\"Thank you for your Feedback: \" + JSON.stringify(values))\r\n        this.props.resetFeedbackForm()\r\n    }\r\n    render() {\r\n       \r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to=\"/home\">Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>\r\n                            Contact Us\r\n                    </BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{required, minLength: minLength(3), maxLength: maxLength(15)}}\r\n                                         />\r\n                                         <Errors className=\"text-danger\"\r\n                                         model=\".firstname\"\r\n                                         show=\"touched\"\r\n                                         messages={{\r\n                                             required: 'Required',\r\n                                             minLength: 'Must be greater than 2 characters',\r\n                                             maxLength: 'Must be 15 characters or less'\r\n                                         }}\r\n                                         />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{required, minLength: minLength(3), maxLength: maxLength(15)}}\r\n                                         />\r\n                                          <Errors className=\"text-danger\"\r\n                                         model=\".lastname\"\r\n                                         show=\"touched\"\r\n                                         messages={{\r\n                                             required: 'Required',\r\n                                             minLength: 'Must be greater than 2 characters',\r\n                                             maxLength: 'Must be 15 characters or less'\r\n                                         }}\r\n                                         />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{required, minLength: minLength(3), maxLength: maxLength(10), isNumber\r\n                                        }}\r\n                                         />\r\n                                          <Errors className=\"text-danger\"\r\n                                         model=\".telnum\"\r\n                                         show=\"touched\"\r\n                                         messages={{\r\n                                             required: 'Required',\r\n                                             minLength: 'Must be greater than 2 numbers',\r\n                                             maxLength: 'Must be 15 numbers or less',\r\n                                             isNumber: 'Must be a number'\r\n                                         }}\r\n                                         />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\" \r\n                                        validators={{required,\r\n                                            validEmail\r\n                                        }}\r\n                                        />\r\n                                          <Errors className=\"text-danger\"\r\n                                         model=\".email\"\r\n                                         show=\"touched\"\r\n                                         messages={{\r\n                                             required: 'Required',\r\n                                             validEmail:'Invalid Email Address'\r\n                                         }}\r\n                                         />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Modal, Button, ModalHeader, ModalBody, FormGroup, Form,  Label, Input } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nclass Header extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        }\r\n    }\r\n    toggleNav =()=>{\r\n            this.setState((prevState)=>({\r\n                isNavOpen: !prevState.isNavOpen\r\n            }))\r\n    }\r\n    toggleModal =()=>{\r\n        this.setState((prevState)=>({\r\n            isModalOpen: !prevState.isModalOpen\r\n        }))\r\n    }\r\n    handleLogin=(e)=>{\r\n        this.toggleModal()\r\n        alert(\"Username: \"+this.username.value + \" Password: \"+ this.password.value + \" Remember: \"+ this.remember.checked)\r\n        e.preventDefault()\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav}/>\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                        <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-Link\" to=\"/home\">\r\n                                    <span className=\"fa fa-home fa-lg\"> </span> Home\r\n                         </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-Link\" to=\"/aboutus\">\r\n                                    <span className=\"fa fa-info fa-lg\"> </span> About us\r\n                         </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-Link\" to=\"/menu\">\r\n                                    <span className=\"fa fa-list fa-lg\"> </span> Menu\r\n                         </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-Link\" to=\"/contactus\">\r\n                                    <span className=\"fa fa-address-card fa-lg\"> </span> Contact Us\r\n                         </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <Nav className=\"ml-auto\"navbar>\r\n                            <NavItem>\r\n                                <Button outline onClick={this.toggleModal}>\r\n                                    <span className=\"fa fa-sign-in fa-lg\"></span>\r\n                                     Login\r\n                                </Button>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p>We take inspiration from worlds best cuisines and create a unique fusion experience</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader>Login</ModalHeader>\r\n                    <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                        <FormGroup>\r\n                        <Label htmlFor=\"username\">Username</Label>\r\n                        <Input type=\"text\" id=\"username\" name=\"username\" innerRef={(input)=> this.username = input}/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                        <Label htmlFor=\"password\">Username</Label>\r\n                        <Input type=\"password\" id=\"password\" name=\"password\" innerRef={(input)=> this.password = input}/>\r\n                        </FormGroup>\r\n                        <FormGroup check>\r\n                       <Label check>\r\n                           <Input type=\"checkbox\" name=\"remember\" innerRef={(input)=> this.remember = input}/>\r\n                           Remember me\r\n                       </Label>\r\n                        </FormGroup>\r\n                        <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                    </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Footer=(props) =>{\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react'\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap'\r\nimport { Loading } from './LoadingComponent'\r\nimport { baseUrl } from '../shared/baseUrl'\r\nimport { FadeTransform } from 'react-animation-components'\r\n\r\nconst RenderCard = ({ item, isLoading, errMess }) => {\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        )\r\n    }\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <FadeTransform in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle> {item.name} </CardTitle>\r\n                        {item.designation && <CardSubtitle>{item.designation}</CardSubtitle>}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        )\r\n    }\r\n}\r\n\r\nconst Home = (props) => {\r\n    return (<div className=\"container\">\r\n        <div className=\"row align-itmes-start\">\r\n            <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />\r\n            </div>\r\n            <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.promotion} isLoading={props.promosLoading} errMess={props.promosErrMess} />\r\n            </div>\r\n            <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.leader} isLoading={props.leadersLoading} errMess={props.leadersErrMess}\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import * as ActionTypes from './ActionTypes'\r\nimport { baseUrl } from '../shared/baseUrl'\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n})\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch)=> {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n\r\n    newComment.date = new Date().toISOString()\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n                error.response = response\r\n                throw error\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message)\r\n                throw errmess\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => {\r\n            console.log('Post comments', error.message)\r\n            alert('Your comment could not be posted \\nError: '+error.message)\r\n        })\r\n\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true))\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n                error.response = response\r\n                throw error\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message)\r\n                throw errmess\r\n            })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)))\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n})\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n})\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n                error.response = response\r\n                throw error\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message)\r\n                throw errmess\r\n            })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)))\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n})\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true))\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n                error.response = response\r\n                throw error\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message)\r\n                throw errmess\r\n            })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)))\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n})\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n})\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true))\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n                error.response = response\r\n                throw error\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message)\r\n                throw errmess\r\n            })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addleaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)))\r\n}\r\n\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n})\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const addleaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n})\r\n\r\nexport const addFeedback = (feedback) => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n    payload: feedback\r\n})\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch)=> {\r\n\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message\r\n    }\r\n    newFeedback.date = new Date().toISOString()\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response\r\n            }\r\n            else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n                error.response = response\r\n                throw error\r\n            }\r\n        },\r\n            error => {\r\n                var errmess = new Error(error.message)\r\n                throw errmess\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addFeedback(response)))\r\n        .catch(error => {\r\n            console.log('Post Feedback', error.message)\r\n            alert('Your feedback could not be posted \\nError: '+error.message)\r\n        })\r\n\r\n}","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_fAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS= 'ADD_PROMOS';\r\nexport const PROMOS_FAILED= 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS= 'ADD_LEADERS';\r\nexport const LEADERS_FAILED= 'LEADERS_FAILED';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK'","import React, { Suspense, lazy, Component } from 'react';\r\n// import Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Contact from './ContactComponent'\r\nimport Header from './HeaderComponent'\r\nimport Footer from './FooterComponent'\r\nimport Home from './HomeComponent'\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\r\n// import About from './AboutComponent';\r\nimport { connect } from 'react-redux'\r\nimport { postFeedback, fetchLeaders, postComment, fetchDishes, fetchComments, fetchPromos } from '../redux/ActionCreators'\r\nimport { actions } from 'react-redux-form'\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\n\r\nconst Menu = lazy(() => import('./MenuComponent'));\r\nconst About = lazy(() => import('./AboutComponent'));\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n\r\n  fetchDishes: () => { dispatch(fetchDishes()) },\r\n\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\r\n\r\n  fetchComments: () => { dispatch(fetchComments()) },\r\n\r\n  fetchPromos: () => { dispatch(fetchPromos()) },\r\n\r\n  fetchLeaders: () => { dispatch(fetchLeaders()) },\r\n\r\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n})\r\n\r\nclass Main extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return (\r\n        <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishesErrMess={this.props.dishes.errMess}\r\n\r\n          promotion={this.props.promotions.promotions.filter((promotion) => promotion.featured)[0]}\r\n          promosLoading={this.props.promotions.isLoading}\r\n          promosErrMess={this.props.promotions.errMess}\r\n\r\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n          leadersLoading={this.props.leaders.isLoading}\r\n          leadersErrMess={this.props.leaders.errMess}\r\n        />\r\n      )\r\n    }\r\n    const DishWithId = ({ match }) => {\r\n      return (\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n          \r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n          isLoading={this.props.dishes.isLoading}\r\n          ErrMess={this.props.dishes.errMess}\r\n        />\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <Suspense fallback={<div className=\"container\"><h1>Loading...</h1></div>}>\r\n          <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300} >\r\n              <Switch>\r\n                <Route path=\"/home\" component={HomePage} />\r\n                <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n                <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n                <Route exact path=\"/contactus\" component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm}\r\n                postFeedback={this.props.postFeedback}\r\n                />} />\r\n                <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders.leaders}\r\n                 leadersLoading={this.props.leaders.isLoading}\r\n                 leadersErrMess={this.props.leaders.errMess}\r\n     \r\n                />} />\r\n                <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n        </Suspense>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes'\r\n\r\nexport const Dishes = (state= {\r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes: []\r\n}, action) =>{\r\n    switch(action.type){\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload}\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, dishes: []}\r\n        default:\r\n            return state\r\n    }\r\n}","import * as ActionTypes from './ActionTypes'\r\n\r\nexport const Comments = (state= {\r\n    errMess: null,\r\n    comments: []\r\n}, action) =>{\r\n    switch(action.type){\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading: false, errMess: null, comments: action.payload}\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, comments: []}\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state, comments: state.comments.concat(comment)}\r\n        default:\r\n            return state\r\n    }\r\n}","\r\nimport * as ActionTypes from './ActionTypes'\r\nexport const Promotions = (state= {\r\n    isLoading: true,\r\n    errMess: null,\r\n    promotions: []\r\n}, action) =>{\r\n    switch(action.type){\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload}\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, promotions: []}\r\n        default:\r\n            return state\r\n    }\r\n}","import * as ActionTypes from './ActionTypes'\r\n\r\nexport const Leaders = (state= {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}, action) =>{\r\n    switch(action.type){\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload}\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, leaders: []}\r\n        default:\r\n            return state\r\n    }\r\n}","export const InitialFeedBack ={\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email:'',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n}\r\n","import React, { Component } from 'react'\nimport Main from './components/MainComponent'\nimport './App.css'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { ConfigureStore } from './redux/configureStore'\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { createForms } from 'react-redux-form'\r\nimport { Dishes } from './dishes'\r\nimport { Comments } from './comments'\r\nimport { Promotions } from './promotions'\r\nimport { Leaders } from './leaders'\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\nimport { InitialFeedBack } from './forms'\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedBack\r\n            }),\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    )\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css'\nimport 'bootstrap-social/bootstrap-social.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const baseUrl = 'http://localhost:3001/'","import React from 'react'\r\n\r\nexport const Loading = ()=>{\r\n    return (\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    )\r\n}"],"sourceRoot":""}